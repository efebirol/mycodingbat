version: 2 # use CircleCI 2.0
jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point
    
    working_directory: ~/repo # directory where steps will run

    docker: # run the steps with Docker
      - image: circleci/openjdk:8-jdk

    steps: # a collection of executable commands

      - checkout # check out source code to working directory

      #- restore_cache: # restore the saved cache after the first run or if `pom.xml` has changed
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          #key: mycodingbat-{{ checksum "pom.xml" }}
      
      - run: |
         echo "Download Maven Dependency"
         mvn dependency:go-offline # gets the project dependencies
      
      #- save_cache: # saves the project dependencies
      #    paths:
      #      - ~/.m2
      #    key: mycodingbat-{{ checksum "pom.xml" }}
      
      - run: |
         echo Example with Multiple Commands
         echo Gebe mehrere Zeile in Circleci Commandline aus
         echo Hier mal 'pwd'
         pwd
         ls
         
      - run:
          name: Check current version of Maven
          command: mvn -v         

      - run:
         name: Maven Clean of local repository
         command: mvn clean
         
      - run:
         name: Maven Package
         command: mvn package # run the actual test

#   schritt1:
#      - run: |
#         echo Beispiel für Workflow (Schritt1)
         
#   schritt2:
#      - run: |
#         echo Beispiel für Workflow (Schritt2)

#definiere Workflows/Abläufe (z. B. bauen und testen)
#workflows:
#  version: 2
#  build_and_test:
#    jobs:
#      - schritt1
#      - schritt2
      
      
      